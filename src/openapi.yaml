openapi: 3.0.1
info:
  title: eventer web api
  description: The api to retrieve events of saxony.
  contact:
    name: Danilo
    email: danilo@eventer.app
  version: "1.0"
servers:
- url: https://api.eventer.app/v1/
  variables: {}
paths:
  /events/{id}:
    get:
      tags:
      - Events
      description: Retrieve an event by its id.
      operationId: get by id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /events:
    get:
      tags:
      - Events
      description: Find events by search.
      operationId: search (GET shortcut)
      parameters:
      - name: search
        in: query
        schema:
          type: string
      - name: starts_at_min
        in: query
        schema:
          type: string
      - name: starts_at_max
        in: query
        schema:
          type: string
      - name: categories
        in: query
        schema:
          type: string
      - name: google_place_ids
        in: query
        schema:
          type: string
      - name: geo_area
        in: query
        schema:
          type: string
      - name: geo_raster_points
        in: query
        schema:
          type: string
      - name: contexts
        in: query
        schema:
          type: string
      - name: include_deleted
        in: query
        schema:
          type: string
      - name: include_places
        in: query
        schema:
          type: string
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: cursor
        in: query
        schema:
          type: string
      - name: updated_since
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEventsResponse'
    post:
      tags:
      - Events
      description: Find events by search.
      operationId: search
      requestBody:
        content:
          application/json; charset="utf-8":
            schema:
              $ref: '#/components/schemas/SearchEventsRequest'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchEventsResponse'
  /places:
    get:
      tags:
      - Places
      operationId: byGooglePlaceIds_get
      parameters:
      - name: google_place_ids
        in: query
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json; charset="utf-8":
              schema:
                $ref: '#/components/schemas/GetPlacesResponse'
    post:
      tags:
      - Places
      operationId: byGooglePlaceIds_post
      requestBody:
        content:
          application/json; charset="utf-8":
            schema:
              $ref: '#/components/schemas/GetPlacesRequest'
      responses:
        default:
          description: default response
          content:
            application/json; charset="utf-8":
              schema:
                $ref: '#/components/schemas/GetPlacesResponse'
  /places/{id}:
    get:
      tags:
      - Places
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json; charset="utf-8": {}
  /application.wadl:
    get:
      operationId: getWadl
      responses:
        default:
          description: default response
          content:
            application/vnd.sun.wadl+xml: {}
            application/xml: {}
  /application.wadl/{path}:
    get:
      operationId: getExternalGrammar
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
components:
  schemas:
    ApiEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        categories:
          uniqueItems: true
          type: array
          items:
            type: string
        link:
          type: string
        contexts:
          uniqueItems: true
          type: array
          items:
            type: string
        google_place_id:
          type: string
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
    GeoArea:
      type: object
      properties:
        bottom:
          type: number
          format: double
        top:
          type: number
          format: double
        right:
          type: number
          format: double
        left:
          type: number
          format: double
    IncludeType:
      type: object
      properties:
        places:
          type: object
    Location:
      type: object
      properties:
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
    Place:
      type: object
      properties:
        name:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        google_place_id:
          type: string
        primary_google_place_id:
          type: string
        website_url:
          type: string
    SearchEventsRequest:
      type: object
      properties:
        search:
          type: string
        limit:
          type: integer
          format: int32
        cursor:
          type: string
        starts_at_min:
          type: string
          format: date-time
        starts_at_max:
          type: string
          format: date-time
        categories:
          type: array
          items:
            type: string
        google_place_ids:
          type: array
          items:
            type: string
        geo_area:
          $ref: '#/components/schemas/GeoArea'
        geo_raster_points:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        contexts:
          type: array
          items:
            type: string
        include:
          $ref: '#/components/schemas/IncludeType'
        updated_since:
          type: string
          format: date-time
    SearchEventsResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/ApiEvent'
        places:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Place'
        cursor:
          type: string
        request:
          $ref: '#/components/schemas/SearchEventsRequest'
        timestamp:
          type: string
          format: date-time
        primary_google_place_ids:
          type: object
          additionalProperties:
            type: string
    GetPlacesRequest:
      type: object
      properties:
        google_place_ids:
          type: array
          items:
            type: string
    GetPlacesResponse:
      type: object
      properties:
        places:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Place'
        request:
          $ref: '#/components/schemas/GetPlacesRequest'
        timestamp:
          type: string
          format: date-time
