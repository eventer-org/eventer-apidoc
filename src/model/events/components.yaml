components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        categories:
          uniqueItems: true
          type: array
          items:
            type: string
        link:
          type: string
        contexts:
          uniqueItems: true
          type: array
          items:
            type: string
        google_place_id:
          type: string
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
        starts_at:
          type: string
          format: date-time
    GeoArea:
      type: object
      properties:
        bottom:
          description: 'The bottom (latitude) of the geo bounding rectangle.'
          type: number
          format: double
          required: true
          example: 50.827132
        top:
          description: 'The top (latitude) of the geo bounding rectangle.'
          type: number
          format: double
          required: true
          example: 50.838948
        right:
          description: 'The right (longitude) of the geo bounding rectangle.'
          type: number
          format: double
          required: true
          example: 12.933774
        left:
          description: 'The left (longitude) of the geo bounding rectangle.'
          type: number
          format: double
          required: true
          example: 12.912577
    DiscoverRequest:
      type: object
      properties:
        search:
          description: Searches events by a free text search.
          type: string
          example: Party
        starts_at_min:
          description: 'The minimum starts-at timestamp for events. If not given the
            default value will be `now`.'
          type: string
          format: date-time
        starts_at_max:
          description: The maximum starts-at timestamp for events.
          type: string
          format: date-time
        categories:
          description: 'A comma separated list of event categories to search for (not
            all events are categorized yet). If not specified all events of all categories
            (or without category) will be returned.<br/><br/>Currently the following
            categories are supported: <br/>`exhibition`, `meetup`, `movie`'
          type: array
          items:
            type: string
          example: [meetup, movie]
        google_place_ids:
          description: 'A comma separated list of ids of google places to restrict search to events from these places only.
            <br/>You can use the google maps api to search for google place ids: 
            [google place id finder](https://developers.google.com/maps/documentation/javascript/examples/places-placeid-finder)'
          type: array
          items:
            type: string
            example: ChIJQ7SzNXtGp0cRZwiPGboZQJo
          style: simple
        geo_area:
          description: 'Restricts the event search to a geo area bounding box specified by 4 comma separated coordinates:
            top (latitude), left (longitude), bottom (latitude) and right (longitude).'
          $ref: '#/components/schemas/GeoArea'
        geo_raster_points:
          description: 'Restricts the event search to a geo areas specified by "raster points". 
            A raster point is a latitude/longitude combination of double values rounded off to 1 decimal point 
            (separated by a semicolon). For example the "raster point" `50.8;12.9` restricts events
            to locations within a latitude starting with `50.8` and longitude starting with `12.9`.'
          type: array
          items:
            type: array
            format: double
          example: [[50.8, 12.9], [50.9, 12.9]]
        contexts:
          description: 'Events may assigned to different contexts to determine where they come from.
            For example a facebook event has the following contexts: `facebook`, `facebook/pages/{pageId}` and `facebook/events/{eventId}`.
            <br /><br />So you can search for all events related to a context (e.g. all events of a facebook page).'
          type: array
          items:
            type: string
          example: ["meetup/groups/29602718", "meetup/groups/29002800"]
        updated_since:
          description: 'If set only events will be returned which has been added or 
            modified since the given timestamp. Can be used for synchronization or fetch scenarios.'
          type: string
          format: date-time
        include:
          $ref: '#/components/schemas/DiscoverRequestIncludeType'
        limit:
          description: 'Sets the limit how much events should be returned by the response. 
            Limit must be greater than 0 and lower than 101. If not set the default limit will be 10.'
          type: integer
          format: int32
          example: 10
        cursor:
          description: 'Continues a search by an "offset" specified by this cursor. 
            Any event search could return a cursor which represents an offset to paginate to the next events. 
            To use a cursor you have to re-run the request with same parameters again but with the given cursor
            value to retrieve the next events of your search behind the limit.'
          type: starting
    DiscoverRequestIncludeType:
      type: object
      properties:
        places:
          type: object
    DiscoverResponse:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        places:
          type: object
          additionalProperties:
            $ref: '../places/components.yaml#/components/schemas/Place'
        cursor:
          type: string
          example: WzE1NTk2NjU4MDAsImV2ZW50IzUxODQ0OTU2MTk2NzAwMTYiXQ==
        request:
          $ref: '#/components/schemas/DiscoverRequest'
        timestamp:
          type: string
          format: date-time
        primary_google_place_ids:
          type: object
          additionalProperties:
            type: string